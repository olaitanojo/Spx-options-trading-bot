apiVersion: apps/v1
kind: Deployment
metadata:
  name: spx-options-trading-bot
  labels:
    app: spx-options-trading-bot
    tier: trading
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: spx-options-trading-bot
      tier: trading
  template:
    metadata:
      labels:
        app: spx-options-trading-bot
        tier: trading
        component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      
      serviceAccountName: spx-options-trading-bot
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values: ["spx-options-trading-bot"]
                topologyKey: kubernetes.io/hostname
      
      initContainers:
        - name: wait-for-dependencies
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              echo "Waiting for dependencies..."
              until nc -z spx-redis-service 6379; do
                echo "Waiting for Redis..."
                sleep 5
              done
              until nc -z spx-postgres-service 5432; do
                echo "Waiting for PostgreSQL..."
                sleep 5
              done
              echo "Dependencies are ready!"
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
      
      containers:
        - name: spx-options-trading-bot
          image: spxoptionsregistry.azurecr.io/spx-options-trading-bot:latest
          
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9000
              protocol: TCP
          
          env:
            - name: ENVIRONMENT
              value: "production"
            - name: LOG_LEVEL
              value: "INFO"
            - name: METRICS_ENABLED
              value: "true"
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: spx-options-secrets
                  key: redis-url
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: spx-options-secrets
                  key: database-url
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: spx-options-secrets
                  key: api-key
            - name: TRADING_API_KEY
              valueFrom:
                secretKeyRef:
                  name: spx-options-secrets
                  key: trading-api-key
            - name: MARKET_DATA_API_KEY
              valueFrom:
                secretKeyRef:
                  name: spx-options-secrets
                  key: market-data-api-key
          
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
              ephemeral-storage: 1Gi
            requests:
              cpu: 500m
              memory: 1Gi
              ephemeral-storage: 512Mi
          
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          
          startupProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 30
            successThreshold: 1
          
          volumeMounts:
            - name: config
              mountPath: /app/config
              readOnly: true
            - name: temp
              mountPath: /tmp
            - name: logs
              mountPath: /app/logs
          
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1001
      
      volumes:
        - name: config
          configMap:
            name: spx-options-config
            defaultMode: 0644
        - name: temp
          emptyDir:
            sizeLimit: 1Gi
        - name: logs
          emptyDir:
            sizeLimit: 5Gi
      
      terminationGracePeriodSeconds: 30
      restartPolicy: Always
